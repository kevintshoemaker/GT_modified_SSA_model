scale_y_continuous(trans="log10",labels=c("                 10","1,000","100,000"),breaks=c(10,10^3,10^5))+
ylab("Immigrants + 1")+
xlab("")
LAMplot_orig<-ggplot(aes(x=j,y=LAM),data=tempcase_orig)+
geom_line()+
scale_y_continuous(labels=c("                   1","2","3","4","5"),breaks=1:5)+
ylab("Annual growth rate")+
xlab("Year")
#look at all plots together
#note that in this example, the metapopulatoin exceeds 100,000,000 individuals at the end.
#vertical lines indicate where lambda of the metapop jumps (>1.5)
fig_nodd<-ggarrange(Nplot_orig,Nmplot_orig,Nimmplot_orig,LAMplot_orig,ncol=1,labels="AUTO",label.x=0.95)
ggsave("FigS2.png",fig_nodd,width=6.5, height=6.5)
#look at it again but in the versionwith density dpeendence fixed (using as.numeric())
this.scen=5 # max density high
this.pop=66 # example populatoin
temp<-readRDS(sprintf("dd/output/scen-%s.rds",this.scen))
temp<-temp[[this.pop]] #get 66th population
temp$N<-temp$Na+temp$Nj
#plot an example of the corrected version
tempcase<-temp[temp$i==36,]
#this is pop 66
#from pop df in main script, acres is:
864.8637
ha=864.8637*0.4047
#max density in scenario 5 is 4:
ha*4
K<-ha*4
Nplot<-ggplot(aes(x=j,y=N),data=tempcase)+
geom_line()+scale_y_continuous(trans="log10",labels=c("            30","100","300","1,000","3,000"),
breaks=c(30,100,300,1000,3000))+
#geom_vline(xintercept = c(1:80)[tempcase$LAM>1.5]-1)+
geom_hline(yintercept=K)+
ylab("Focal pop. size")+
xlab("")
Nmplot<-ggplot(aes(x=j,y=Nm),data=tempcase)+
geom_line()+
scale_y_continuous(trans="log10",labels=c("10,000","100,000","1,000,000"),
breaks=10^(4:6))+
# geom_vline(xintercept = c(1:80)[tempcase$LAM>1.5]-1)
ylab("Dummy metapop. size")+
xlab("")
Nimmplot<-ggplot(aes(x=j,y=Nimm+1),data=tempcase)+
geom_line()+
scale_y_continuous(trans="log10",labels=c("              1","10","100","1,000"),
breaks=10^(0:3))+
ylab("Immigrants + 1")+
xlab("")
LAMplot<-ggplot(aes(x=j,y=LAM),data=tempcase)+
geom_line()+
scale_y_continuous(labels=c("              1","2","3","4","5"),
breaks=1:5)+
xlab("Year")+
ylab("Annual growth rate")
#vertical lines indicate where lambda of the metapop jumps (>1.5)
fig_dd<-ggarrange(Nplot,Nmplot,Nimmplot,LAMplot,ncol=1,labels="AUTO",label.x=.95)
#fig_dd<-annotate_figure(fig_dd, top = text_grob("Density dependence fixed",
#                                          color = "blue", face = "bold", size = 14))
#look at table to get #s for description in text
tempcase[1:30,]
ggsave("Fig2.png",fig_dd,width=6.5,height=6.5)
#read in all of the output files to get summaries about metapopulation and immigration (skip this and just read in the file below)
if(F){
df<-expand.grid(pop=1:457,scen=1:32)
#first just look at the first 500 rows
#df<-df[1:500,]
#df[1894,]
#loop across all pops and scens
#k=1894
cl <- makeCluster(detectCores()-1)
registerDoParallel(cl)
#k=1
parout<-foreach(k = 1:32,.packages=c("dplyr")) %dopar%{
this.scen<-df$scen[k]
#load the output file
temp<-readRDS(sprintf("original/output/scen-%s.rds",this.scen))
temp<-do.call(rbind,temp)
#j are years
#unique(temp$j)
#i are reps
#unique(temp$i)
#get total individuals for each timestep
temp$N<-temp$Na+temp$Nj
tempsum<-temp %>%
group_by(pop,i) %>%
dplyr::summarise(LAM_max=max(LAM,na.rm=T),Nm_max=max(Nm),N1=N[1],N80=N[80],Nm1=Nm[1],Nm80=Nm[80],maxNimm=max(Nimm)) %>%
group_by(pop) %>%
dplyr::summarize(medLAMmax=median(LAM_max),medNMmax=median(Nm_max),medN1=median(N1),medN80=median(N80),medNm1=median(Nm1),medNm80=median(Nm80),medNimm=median(maxNimm))
return(tempsum)
}
head(temp)
stopCluster(cl)
#get results into df
df<-cbind(df,do.call(rbind,parout))
#drop first "pop" column
df<-df[,-1]
write.csv(df,"original/original_Nm_summary.csv",row.names = F)
}
#instead of reading it in each time, load it from previous run on the cluster
df<-read.csv("original/original_Nm_summary.csv")
#subset just to the low managment medium threats; this is the scenario most often interpreted in the discussion of folt et al.
df26<-df[df$scen==26,]
#which "metapops" are in the same metapop?
pops<-readRDS("pop_metapop_key.rds")
df26$metapopID<-as.factor(pops$LandscapePopID)
#only look at metapops taht ahve >1 pop
metas.keep<-unique(df26$metapopID[duplicated(df26$metapopID)])
df26m<-df26[df26$metapopID %in% metas.keep,]
mc<-data.frame(metapopID=metas.keep,index=NA)
mc<-mc[order(mc$metapopID),]
mc$index= c(1:length(mc$metapopID))
mc$color<-as.factor(as.numeric(mc$index) %% 5 +1)
df26m<-left_join(df26m,mc[,c("metapopID","color")])
#df26m$color=as.factor(as.numeric(df26$metapopID) %% 5 +1) #get
metapop.var.fig<-ggplot(aes(x=metapopID,y=medNm80+1,color=color),data=df26m)+
geom_violin()+
geom_point()+
scale_y_continuous(trans='log10',labels=c("1","10","100","1,000","10,000","100,000"),breaks=10^c(0:5))+
theme(legend.position = "none")+
ylab("Median end dummy metapop. size")+
xlab("Metapopulation ID")+
theme(axis.text.x = element_text(angle = 90,hjust=1,size=6))
ggsave("FigS1.png",metapop.var.fig,width=6.5,height=4)
#what is upper limit on realistic growth?
#3% increase per year is very generous since no immigration
1.03^80
df26$Nmgrowth<-df26$medNm80/df26$medNm1
hist(log10(df26$Nmgrowth))
abline(v=log10(5))
#how many pops had metapopulations increase over 10-fold?
sum(df26$Nmgrowth>10)
#how many of the pops with >100 individuals in them have unrealistic metapopulation growth?
table(df26$Nmgrowth>10,df26$medN80>=100)
#how many individual metapops exceed the total starting pop size rangewide?
sum(df26$medNm80>70500)
#get some growth bins for color coding the figures
df26$NmgrowthD<-as.factor(mapToIntervals(df26$Nmgrowth, c(0,5,5,10,10,20,20,100,100,200), includeLower=TRUE))
#arragne them so the higher growth points plot on top for better visibility
df26<-df26 %>%
arrange(NmgrowthD)
#plot ending pop size vs ending metapop size
plot1<-ggplot(aes(x=medNm80+1,y=medN80+1),data=df26)+
geom_point(aes(fill=NmgrowthD), colour="black",pch=21, size=1.5, alpha=1)+
scale_fill_brewer(
type = "seq",
palette = "RdYlBu",
direction = -1,
aesthetics = "fill",
name="Metapop fold-change \nin 80 yrs",
labels = c("[0,5)", "[5-10)", "[10-20)","[20-100)","[100-200)"))+
scale_x_continuous(trans='log10',labels=c(10,"1,000","100,000"),breaks=c(10,1000,100000)) +
scale_y_continuous(trans='log10')+
xlab("Ending dummy metapop. size + 1")+ylab("Ending focal pop. size + 1")+
theme(legend.position = "none")
#plot starting metapop size vs starting focal pop size, highlight pops with urnealistic metapop growth
plot2<-ggplot(aes(x=medNm1,y=medN1),data=df26)+
geom_point(aes(fill=NmgrowthD), colour="black",pch=21, size=1.5, alpha=1)+
scale_fill_brewer(
type = "seq",
palette = "RdYlBu",
direction = -1,
aesthetics = "fill",
name="metapop foldchange \nin 80 yrs",
labels = c("[0,5)", "[5-10)", "[10-20)","[20-100)","[100-200)"))+
scale_x_continuous(trans='log10') +
scale_y_continuous(trans='log10')+
xlab("Starting metapop. size")+ylab("Starting focal pop. size")+
theme(legend.position = "none")
pair1<-df26[,c("medN1","NmgrowthD")]
pair2<-df26[,c("medN80","NmgrowthD")]
pair1$time<-"Start"
pair1$id<-1:nrow(pair1)
pair2$time<-"End"
pair2$id<-1:nrow(pair2)
names(pair1)[1]<-"size"
names(pair2)[1]<-"size"
pairs<-rbind(pair1,pair2)
pairs$time<-factor(pairs$time,levels=c("Start","End"))
plot3<-ggplot(data=pairs, aes(x = time, y = size+1,group=id)) +
#geom_point(col="black",pch=21) +
geom_line(aes(col=NmgrowthD),linewidth=0.5)+
scale_color_brewer(
type = "seq",
palette = "RdYlBu",
direction = -1,
name="Dummy metapop \nfold-change \nin 80 yrs",
labels = c("[0,5)", "[5-10)", "[10-20)","[20-100)","[100-200)"))+
scale_y_continuous(trans='log10')+
xlab("Time")+
ylab("Focal pop. size + 1")+
scale_x_discrete( expand = c(0, .2))+
scale_color_brewer(
type = "seq",
palette = "RdYlBu",
direction = -1,
aesthetics = "fill",
name="Metapop. \nfoldchange \nin 80 yrs",
labels = c("[0,5)", "[5-10)", "[10-20)","[20-100)","[100-200)"))
ggsave("Fig3.png",ggarrange(plot1,plot2,plot3,nrow=1,widths = c(0.7,0.7,1),labels="AUTO"),width=8,height=2.5)
versions<-c("original","dd","3percent","3percent-unrolled")
table3s<-list()
for(i in 1:length(versions)){
tempdf<-read.csv(sprintf("%s/table3.csv",versions[i]))[,-1]#drop the first column, it's just the rownames
tempdf$version<-versions[i]
tempdf$scen_num<-1:32
table3s[[i]]<-tempdf
}
#####error bars for pop 26 for figure #####
versions<-c("original-keeper","dd","3percent","3percent-unrolled")
alloutputs<-list()
#for(i in 1:length(versions)){
i=1
alloutputs[[i]]<-readRDS(sprintf("%s/output/scen-26.rds",versions[i]))
#in orig_all, i is the replicate, j is the year
orig_all<-do.call(rbind,alloutputs[[1]])
#####error bars for pop 26 for figure #####
versions<-c("original","dd","3percent","3percent-unrolled")
alloutputs<-list()
#for(i in 1:length(versions)){
i=1
alloutputs[[i]]<-readRDS(sprintf("%s/output/scen-26.rds",versions[i]))
for(i in 1:length(versions)){
i=1
alloutputs[[i]]<-readRDS(sprintf("%s/output/scen-26.rds",versions[i]))
}
#scenario names
Scenarionames<-table3s[[4]]$Scenario
table3s[[4]]<-table3s[[4]][,-1] #drop the extra column from the 3percent-unrolled table
table3big<-do.call(rbind,table3s)
#reorder levels
table3big$version<-factor(table3big$version,levels=c("original","dd","3percent","3percent-unrolled"))
#number of tortoises at end
abund.fig<-ggplot(data=table3big,aes(x=version,y=NTott,fill=version))+
geom_bar(stat='identity')+
scale_fill_discrete(labels = c("Original", "DD", "DD + FB","DD + FB + MR"))+
facet_wrap(~scen_num,ncol=8) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
# ggtitle("Total population size at year 2100")+
ylab("Final abundance")+
xlab("")+
scale_y_continuous(labels=comma)+
labs(fill="Model version")
abund.fig
p <- ggplot(data.frame(), aes(x = 1, y = 1)) +
geom_blank()+ theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "white"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank())+
xlab("")+
ylab("")
Scentable1<-data.frame(Number=1:16,Scenario=Scenarionames[1:16])
Scentable2<-data.frame(Number=17:32,Scenario=Scenarionames[17:32])
tt <- ttheme_default(colhead=list(fg_params = list(parse=TRUE)),
base_size = 8,
padding = unit(c(.01, .05), "in"))
tbl1 <- tableGrob(Scentable1, rows=NULL, theme=tt)
library(grid)
library(gridExra)
library(gridExtra)
tbl1 <- tableGrob(Scentable1, rows=NULL, theme=tt)
tt <- ttheme_default(colhead=list(fg_params = list(parse=TRUE)),
base_size = 8,
padding = unit(c(.01, .05), "in"))
tbl1 <- tableGrob(Scentable1, rows=NULL, theme=tt)
tbl2 <- tableGrob(Scentable2, rows=NULL, theme=tt)
#save abundance plot
png("FigS3.png", width = 6.5, height = 6.75,
units = "in",res=300)
grid.arrange(abund.fig, gtable_combine(tbl1,tbl2),
nrow = 2, heights = c(1,0.5))
dev.off()
#number of populations left at end
pops.fig<-ggplot(data=table3big,aes(x=version,y=PopsTt,fill=version))+
geom_bar(stat='identity')+
scale_fill_discrete(labels = c("Original", "DD", "DD + FB","DD + FB + MR"))+
facet_wrap(~scen_num,ncol=8) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
ylab("No. extant populations")+
labs(fill="Model version")
pops.fig
png("FigS4.png", width = 6.5, height = 6.75,
units = "in",res=300)
grid.arrange(pops.fig, gtable_combine(tbl1,tbl2),
nrow = 2, heights = c(1,0.5))
dev.off()
# Figure 4 - abundance and # pops for Scenario 26 -------------------------
#table 3 only for scenario 26
table3big26<-table3big[table3big$scen_num==26,]
abund.fig26<-ggplot(data=table3big26,aes(x=version,y=NTott,fill=version))+
geom_bar(stat='identity')+
#facet_wrap(~scen_num,ncol=8) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
# ggtitle("Total population size at year 2100")+
theme(legend.position="blank")+
ylab("Total population size")+
xlab("") #+
pops.fig26<-ggplot(data=table3big26,aes(x=version,y=PopsTt,fill=version))+
scale_fill_discrete(labels = c("Original", "DD", "DD + FB","DD + FB + MR"))+
geom_bar(stat='identity')+
#facet_wrap(~scen_num,ncol=8) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
#ggtitle("Number of extant populations at year 2100")+
ylab("No. persisting populations")+
xlab("")+
labs(fill="Model version")+
theme(legend.key.size = unit(0.5, 'cm'), #change legend key size
legend.key.height = unit(0.5, 'cm'), #change legend key height
legend.key.width = unit(0.5, 'cm'), #change legend key width
legend.title = element_text(size=8), #change legend title font size
legend.text = element_text(size=6)) #change legend text font size
pops.fig26
ggsave("Fig4.png",ggarrange(plotlist=list(abund.fig26,pops.fig26),nrow=1,widths=c(0.7,1),labels="AUTO",label.x=c(0.85,0.52)),width=5,height=2)
####### Figure demonstrating age stucture within juvenile stage ######
dummydata<-data.frame(age=c(1:10),lambda1=100*0.75^c(0:9),lambda0.96=100*0.75^c(0:9)*0.96^(9:0))
dummydata$lambda1<-dummydata$lambda1/sum(dummydata$lambda1)*1000
dummydata$lambda0.96<-dummydata$lambda0.96/sum(dummydata$lambda0.96)*1000
df <- pivot_longer(dummydata,c(lambda1, lambda0.96), names_to = "type", values_to = "total")
#actually just do it for lambda = 1
df_v1<-df[df$type=="lambda1",]
p_age_v1<-ggplot(df_v1,aes(x=age,y=total))+
geom_bar(stat="identity",position="dodge",fill="#E69F00")+
geom_hline(yintercept=100,linetype="dotted")+scale_x_continuous(limits = c(0, 11), breaks = c(1:10))+
ylab("Abundance")+
xlab("Age")+
#scale_fill_manual(values=c("#E69F00", "#56B4E9"),
#                               name="Lambda",
#                               breaks=c("lambda1", "lambda0.96"),
#                               labels=c(1, 0.96))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(0.8, 0.8))+
annotate("segment", x = 10, xend = 10.5, y = 21, yend = 40)+
annotate(geom="text", x=10.5, y=50, label="20",
color="black")
p_age_v1
#pdf("juv_age_structure.pdf",width=3.5,height=3)
#p_age
#dev.off()
ggsave("Fig5.png",p_age_v1,width=3.5,height=2.75)
p_age_v2<-ggplot(df,aes(x=age,y=total,fill=type))+geom_bar(stat="identity",position="dodge")+
geom_hline(yintercept=100,linetype="dotted")+scale_x_continuous(limits = c(0, 11), breaks = c(1:10))+
ylab("Abundance")+
xlab("Age")+ scale_fill_manual(values=c("#E69F00", "#56B4E9"),
name="Lambda",
breaks=c("lambda1", "lambda0.96"),
labels=c(1, 0.96))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line = element_line(colour = "black"),
legend.position = c(0.8, 0.8))+
annotate("segment", x = 10.25, xend = 11, y = 21, yend = 40)+
annotate(geom="text", x=11, y=50, label="20",color="black")+
annotate("segment", x = 9.75, xend = 9.25, y = 27, yend = 45)+
annotate(geom="text", x=9.25, y=55, label="26",color="black")
p_age_v2
#pdf("juv_age_structure.pdf",width=3.5,height=3)
#p_age
#dev.off()
#ggsave("juvenile_age_structure.png",p_age,width=3.5,height=2.75)
ggsave("FigS5.png",p_age_v2,width=3.5,height=2.75)
pops.fig26<-ggplot(data=table3big26,aes(x=version,y=PopsTt,fill=version))+
scale_fill_discrete(labels = c("Original", "DD", "DD + FB","DD + FB + MR"))+
geom_bar(stat='identity')+
#facet_wrap(~scen_num,ncol=8) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
#ggtitle("Number of extant populations at year 2100")+
ylab("No. persisting populations")+
xlab("")+
labs(fill="Model version")+
theme(legend.key.size = unit(0.5, 'cm'), #change legend key size
legend.key.height = unit(0.5, 'cm'), #change legend key height
legend.key.width = unit(0.5, 'cm'), #change legend key width
legend.title = element_text(size=8), #change legend title font size
legend.text = element_text(size=6)) #change legend text font size
pops.fig26
#number of populations left at end
pops.fig<-ggplot(data=table3big,aes(x=version,y=PopsTt,fill=version))+
geom_bar(stat='identity')+
scale_fill_discrete(labels = c("Original", "DD", "DD + FB","DD + FB + MR"))+
facet_wrap(~scen_num,ncol=8) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
ylab("No. extant populations")+
labs(fill="Model version")+
xlab("")
pops.fig
Scentable1<-data.frame(Panel=1:16,Scenario=Scenarionames[1:16])
Scentable2<-data.frame(Panel=17:32,Scenario=Scenarionames[17:32])
tt <- ttheme_default(colhead=list(fg_params = list(parse=TRUE)),
base_size = 8,
padding = unit(c(.01, .05), "in"))
tbl1 <- tableGrob(Scentable1, rows=NULL, theme=tt)
tbl2 <- tableGrob(Scentable2, rows=NULL, theme=tt)
#save abundance plot
png("FigS3.png", width = 6.5, height = 6.75,
units = "in",res=300)
grid.arrange(abund.fig, gtable_combine(tbl1,tbl2),
nrow = 2, heights = c(1,0.5))
dev.off()
#number of populations left at end
pops.fig<-ggplot(data=table3big,aes(x=version,y=PopsTt,fill=version))+
geom_bar(stat='identity')+
scale_fill_discrete(labels = c("Original", "DD", "DD + FB","DD + FB + MR"))+
facet_wrap(~scen_num,ncol=8) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
ylab("No. extant populations")+
labs(fill="Model version")+
xlab("")
pops.fig
png("FigS4.png", width = 6.5, height = 6.75,
units = "in",res=300)
grid.arrange(pops.fig, gtable_combine(tbl1,tbl2),
nrow = 2, heights = c(1,0.5))
dev.off()
# Figure 4 - abundance and # pops for Scenario 26 -------------------------
#table 3 only for scenario 26
table3big26<-table3big[table3big$scen_num==26,]
abund.fig26<-ggplot(data=table3big26,aes(x=version,y=NTott,fill=version))+
geom_bar(stat='identity')+
#facet_wrap(~scen_num,ncol=8) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
# ggtitle("Total population size at year 2100")+
theme(legend.position="blank")+
ylab("Total population size")+
xlab("") #+
pops.fig26<-ggplot(data=table3big26,aes(x=version,y=PopsTt,fill=version))+
scale_fill_discrete(labels = c("Original", "DD", "DD + FB","DD + FB + MR"))+
geom_bar(stat='identity')+
#facet_wrap(~scen_num,ncol=8) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank())+
#ggtitle("Number of extant populations at year 2100")+
ylab("No. persisting populations")+
xlab("")+
labs(fill="Model version")+
theme(legend.key.size = unit(0.5, 'cm'), #change legend key size
legend.key.height = unit(0.5, 'cm'), #change legend key height
legend.key.width = unit(0.5, 'cm'), #change legend key width
legend.title = element_text(size=8), #change legend title font size
legend.text = element_text(size=6)) #change legend text font size
pops.fig26
ggsave("Fig4.png",ggarrange(plotlist=list(abund.fig26,pops.fig26),nrow=1,widths=c(0.7,1),labels="AUTO",label.x=c(0.85,0.52)),width=5,height=2)
#which "metapops" are in the same metapop?
pops<-readRDS("pop_metapop_key.rds")
pops
write.csv(pops,"pop_metapop_key.csv",row.names = F)
#instead of reading it in each time, load it from previous run on the cluster
df<-read.csv("original/original_Nm_summary.csv")
#subset just to the low managment medium threats; this is the scenario most often interpreted in the discussion of folt et al.
df26<-df[df$scen==26,]
df26
pops
# Figure S1 - metapops vary tremendously at end ---------------------------
pops$OBJECTID==df26$pop
pops$OBJECTID
df26$pop
pops$OBJECTID
pops
df26
write.csv(pops[,c("OBJECTID","LandscapePopID")],"pop_metapop_key.csv",row.names = F)
pops<-read.csv("pop_metapop_key.csv")
df26$metapopID<-as.factor(pops$LandscapePopID)
#only look at metapops taht ahve >1 pop
metas.keep<-unique(df26$metapopID[duplicated(df26$metapopID)])
df26m<-df26[df26$metapopID %in% metas.keep,]
mc<-data.frame(metapopID=metas.keep,index=NA)
mc<-mc[order(mc$metapopID),]
mc$index= c(1:length(mc$metapopID))
mc$color<-as.factor(as.numeric(mc$index) %% 5 +1)
df26m<-left_join(df26m,mc[,c("metapopID","color")])
#df26m$color=as.factor(as.numeric(df26$metapopID) %% 5 +1) #get
metapop.var.fig<-ggplot(aes(x=metapopID,y=medNm80+1,color=color),data=df26m)+
geom_violin()+
geom_point()+
scale_y_continuous(trans='log10',labels=c("1","10","100","1,000","10,000","100,000"),breaks=10^c(0:5))+
theme(legend.position = "none")+
ylab("Median end dummy metapop. size")+
xlab("Metapopulation ID")+
theme(axis.text.x = element_text(angle = 90,hjust=1,size=6))
library(tidyverse)
#only look at metapops taht ahve >1 pop
metas.keep<-unique(df26$metapopID[duplicated(df26$metapopID)])
df26m<-df26[df26$metapopID %in% metas.keep,]
mc<-data.frame(metapopID=metas.keep,index=NA)
mc<-mc[order(mc$metapopID),]
mc$index= c(1:length(mc$metapopID))
mc$color<-as.factor(as.numeric(mc$index) %% 5 +1)
df26m<-left_join(df26m,mc[,c("metapopID","color")])
#df26m$color=as.factor(as.numeric(df26$metapopID) %% 5 +1) #get
metapop.var.fig<-ggplot(aes(x=metapopID,y=medNm80+1,color=color),data=df26m)+
geom_violin()+
geom_point()+
scale_y_continuous(trans='log10',labels=c("1","10","100","1,000","10,000","100,000"),breaks=10^c(0:5))+
theme(legend.position = "none")+
ylab("Median end dummy metapop. size")+
xlab("Metapopulation ID")+
theme(axis.text.x = element_text(angle = 90,hjust=1,size=6))
metapop.var.fig
